{
  // Utilities

  "Copyright Pawel Grzybek": {
    "prefix": "copy",
    "body": [
      "/* -----------------------------------------------------------------------------",
      " * Copyright Â© ${CURRENT_YEAR} Pawel Grzybek. All rights reserved.",
      " * Licensed under the MIT License.",
      " * ---------------------------------------------------------------------------*/",
      ""
    ],
    "description": "Copyright",
    "scope": "javascript, javascriptreact, typescript"
  },

  "Typescript type checking": {
    "prefix": "ts-check",
    "body": ["// @ts-check"],
    "description": "Typescript type checking",
    "scope": "javascript, javascriptreact"
  },

  "Log / warning / error to console": {
    "prefix": "con",
    "body": ["console.${1|log,warning,error|}($2);"],
    "description": "Log output to console",
    "scope": "javascript, javascriptreact, typescript"
  },

  // ESLint specific snippets

  "ESLint disable block": {
    "prefix": "eslintdisableblock",
    "body": [
      "/* eslint-disable ${1:rule-one, rule-two} */",
      "${3:// your unlinted code goes here}",
      "/* eslint-enable ${1:rule-one, rule-two} */"
    ],
    "description": "ESLint disable block",
    "scope": "javascript, javascriptreact, typescript"
  },

  "ESLint disable selection": {
    "prefix": "eslintdisableselection",
    "body": [
      "/* eslint-disable ${1:rule-one, rule-two} */",
      "${TM_SELECTED_TEXT}",
      "/* eslint-enable ${1:rule-one, rule-two} */"
    ],
    "description": "ESLint disable selection",
    "scope": "javascript, javascriptreact, typescript"
  },

  "ESLint disable file": {
    "prefix": "eslintdisablefile",
    "body": ["/* eslint-disable */"],
    "description": "ESLint disable file",
    "scope": "javascript, javascriptreact, typescript"
  },

  "ESLint disable line": {
    "prefix": "eslintdisableline",
    "body": ["// eslint-disable-line ${1:rule-one, rule-two}"],
    "description": "ESLint disable line",
    "scope": "javascript, javascriptreact, typescript"
  },

  "ESLint disable next line": {
    "prefix": "eslintdisablenextline",
    "body": ["// eslint-disable-next-line ${1:rule-one, rule-two}"],
    "description": "ESLint disable next line",
    "scope": "javascript, javascriptreact, typescript"
  },

  // Jest specific snippets

  "Jest - describe": {
    "prefix": "jest-describe",
    "body": ["describe('${1:descriptor}', () => {", "  ${2:content}", "});"],
    "description": "Jest - describe",
    "scope": "javascript, javascriptreact, typescript"
  },

  "Jest - it": {
    "prefix": "jest-it",
    "body": [
      "it('${1:Test description}', () => {",
      "  expect(${2:Expresion}).toBe(${3:Result});",
      "});"
    ],
    "description": "Jest - it",
    "scope": "javascript, javascriptreact, typescript"
  },

  "Jest - test": {
    "prefix": "jest-test",
    "body": [
      "test('${1:Test description}', () => {",
      "  expect(${2:Expresion}).toBe(${3:Result});",
      "});"
    ],
    "description": "Jest - test",
    "scope": "javascript, javascriptreact, typescript"
  },

  // Express specific snippets

  "Express - method": {
    "prefix": "express-method",
    "body": [
      "app.${1:method}(\"/\", (req, res, next) => {",
      "  ${2:// make some cool stuff here}",
      "});"
    ],
    "description": "Express method"
  },

  // Print this shit
  "Print this shit": {
    "prefix": "printThisShit",
    "body": [
      "console.log('- - - - - - - - - - - - - - - - - - - - - ')",
      "console.log({${1:printThisShit} })",
      "console.log('- - - - - - - - - - - - - - - - - - - - - ')"
    ],
    "description": "Print this shit"
  }
}
